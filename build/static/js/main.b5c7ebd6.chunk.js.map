{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","text","colour","onClick","className","style","backgroundColor","defaultProps","Header","name","onAdd","showAdd","e","console","log","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","color","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5c7ebd6.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({text, colour, onClick}) => {\n    return (\n        <button className='btn' style={{backgroundColor: colour}} onClick={onClick}> \n            {text} \n        </button>\n    )\n}\n\n// set default values if no props are passed\nButton.defaultProps = {\n    colour: 'steelblue',\n    text: 'HELLO'\n}\n\n// proptypes let us force them to pass a certain data structure\nButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n}\n\nexport default Button","import PropTypes from 'prop-types'\nimport Button from './Button'\n\n// props can either be passed props or {name of prop passed}\nconst Header = ({name, onAdd, showAdd}) => {\n    // event handling \n    const onClick = (e) => {\n        console.log(e)\n    }\n\n    return (\n        <header>\n            {/* curly braces allow us to run javascript */}\n            <h1> hi {name}</h1>\n            <Button text={showAdd ? 'Close' : 'Add'} colour={showAdd ? 'red' : 'green'} onClick={onAdd} />\n            <Button text='2' colour='red' onClick={onClick} />\n            <Button text='3' colour='blue' onClick={onClick} />\n            <Button text='4' colour='yellow' onClick={onClick} />\n            <Button onClick={onClick}/>\n        </header>\n    )\n}\n\n// proptypes let us force them to pass a certain data structure\nHeader.propTypes = {\n    name: PropTypes.string.isRequired,\n}\n\nexport default Header","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        // template literal, toggle classes for css\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} \n            onDoubleClick={() => onToggle(task.id)}>\n            <h3> \n                {task.text} <FaTimes \n                                style={{ color: 'red', \n                                        cursor: 'pointer'}} \n                                // this is how you pass something up\n                                onClick={() => onDelete(task.id)} \n                            />\n            </h3>\n            <p> {task.day} </p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n    return (\n        <>\n            {tasks.map((task) => (\n                <Task \n                    task={task} \n                    onDelete={onDelete}\n                    onToggle={onToggle} \n                />\n            ))}\n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if (!text) {\n            alert('Please add a task')\n            return\n        }\n\n        onAdd({ text, day, reminder })\n\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n        <form onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type='text' placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)} />\n            </div>\n            <div className='form-control'>\n                <label>Day & Time</label>\n                <input type='text' placeholder='Add Day & Time' value={day} onChange={(e) => setDay(e.target.value)}/>\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input type='checkbox' value={reminder} checked={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\n            </div>\n            <input className='btn btn-block' type='submit' value='Save Task' />\n        </form>\n    )\n}\n\nexport default AddTask\n","import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport { useState } from 'react'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n    {\n      \"id\": 1,\n      \"text\": \"Doctors Appointment\",\n      \"day\": \"Feb 5th at 2:30pm\",\n      \"reminder\": true\n    },\n    {\n      \"id\": 2,\n      \"text\": \"Meeting at School\",\n      \"day\": \"Feb 6th at 1:30pm\",\n      \"reminder\": true\n    }\n  ])\n\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000)\n    const newTask = {id, ...task}\n    setTasks([...tasks, newTask])\n  }\n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  const toggleReminder = (id) => {\n    // ... pulls all the stuff from the previous state\n    setTasks(tasks.map((task) => task.id === id ? \n                      { ...task, reminder: !task.reminder} : task))\n  }\n\n  return (\n    <div className=\"App\">\n      <Header name=\"MOM\" \n              onAdd={() => setShowAddTask(!showAddTask)} \n              showAdd={showAddTask} \n      />\n      {showAddTask ? <AddTask onAdd={addTask} /> : ''} \n      {tasks.length > 0 ?\n      <Tasks tasks={tasks} \n              onDelete={deleteTask} \n              onToggle={toggleReminder}\n      /> : 'No Tasks To Show'}\n    </div>\n  );\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}